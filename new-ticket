#!/bin/bash

# Prepare for a fresh Drupal 8 branch.
# Assumes that you:
# - are currently in the target directory
# - already have a feature branch checked out

# With gratitude to Ben Thornton
# @see https://git.businesswire.com/projects/HQ/repos/hq-tools/browse/dev/reset-dev

# These settings should never change:
new_branch=$(git symbolic-ref --short HEAD)
set +x
# Load variables from the included config file.  This makes it easier for users to change key variables.
. config

# Description of tasks to be performed, repeats at both the beginning and end of the script.
tasks="- Pull a fresh copy of $upstream_repo/$base_branch
- Push to $fork_repo/$base_branch
- Push to $fork_repo/$new_branch and set upstream
- Task runner: $runner
- Turn on the virtual machine: $vm_start
- Run commands inside the VM"

read -p "Hi!
I'm going to help you refresh your local dev environment to start a new ticket.  Here's what I can do:
$tasks

In order for this to work, please make sure:
- You're in the base directory for your project
- You have forked the 'upstream' repository and created your own
- You've already created a feature branch for the new ticket
- You've updated the enclosed 'config' file with the correct repositories and branches

Press Enter to continue, or ctrl-c to cancel."


echo "
First I'm going to update the upstream master branch."
# Even though we've already created a feature branch, we want to refresh master, and also 
git checkout "$base_branch" || {
    >&2 echo "fatal: cannot checkout $base_branch"
    exit 3
}

git pull $upstream_repo $base_branch

echo "
Now I'm going to push the latest upstream master to your fork master."
git push $fork_repo $base_branch

echo "
OK - now we can switch back to your feature branch.  I'm also going to set $new_branch to track $fork_repo."
git checkout $new_branch
git push $fork_repo $new_branch --set-upstream

echo "
I'm going to see if there's anything to install."
# See if there's anything new to install from Composer.
$runner

echo "
Let's turn this thing on."
# Turn on the VM and reprovision it if necessary
$vm_start

echo "
I'm going to run some commands inside the VM now."
# Automated steps inside the VM.  Default steps:
# - Rebuild the site and run the automated tests.
# - Generate a valid URL for a one-time login.
# - Import stored config.
for current in "${commands[@]}"
do
    current_command="cd $guest_path; $current"
    $vm_ssh "$current_command"
done

echo "
Congratulations, we're done!  Here's what we did:
$tasks

Script completed in only $SECONDS seconds.

Now go forth and be awesome."